pipeline {
    agent any

    stages {
        stage('Checkout') {
            steps {
                git branch:'master', url: 'https://github.com/ScaleSec/vulnado.git'
            }
        }

        stage('OWASP Dependency-Check Vulnerabilities') {
            environment {
                NVD_API_KEY = '6475b353-dd6b-4785-aa9d-1c65de6a8f8c'
            }

            steps {
                dependencyCheck additionalArguments: ''' 
                            -o './'
                            -s './'
                            -f 'ALL' 
                            --prettyPrint
                            --noupdate
                            --nvdApiKey $NVD_API_KEY''', odcInstallation: 'OWASP Dependency-Check Vulnerabilities'
                dependencyCheckPublisher pattern: 'dependency-check-report.xml'
            }
        } 

		stage ('Build') {
			steps {
				sh '/var/jenkins_home/apache-maven-3.6.3/bin/mvn --batch-mode -V -U -e clean verify -Dsurefire.useFile=false -Dmaven.test.failure.ignore'
				}
			}

		stage ('Analysis') {
				steps {
				sh '/var/jenkins_home/apache-maven-3.6.3/bin/mvn --batch-mode -V -U -e checkstyle:checkstyle pmd:pmd pmd:cpd findbugs:findbugs'
				}
			}	
		}
	}


    post {
		//if i want to keep file, keep line 47-50
        // always {
		// 	archiveArtifacts artifacts: 'dependency-check-report.*', allowEmptyArchive: true
        //     cleanWs()
        // }

		always{
			
			junit testResults: '**/target/surefire-reports/TEST-*.xml'
			recordIssues enabledForFailure: true, tools: [mavenConsole(), java(), javaDoc()]
			recordIssues enabledForFailure: true, tool: checkStyle()
			recordIssues enabledForFailure: true, tool: spotBugs(pattern:'**/target/findbugsXml.xml')
			recordIssues enabledForFailure: true, tool: cpd(pattern: '**/target/cpd.xml')
			recordIssues enabledForFailure: true, tool: pmdParser(pattern: '**/target/pmd.xml')
			
			success {
				echo 'Published and Deployed Successfully!'
			}
			
			failure {
				echo 'Publish and Deploy Failed'
			}
    }
}